# How to run workflows: npx @redocly/cli@latest respect ./apis/warp.arazzo.yaml --input token=abc --server api-reference=https://warp-multi-sidebars.redocly.app/_mock/apis/
# @chunk {"steps": ["spec"]}
arazzo: 1.0.1
# @chunk-end
# @chunk {"steps": ["info"]}
info:
  title: Warp API
  version: 1.0.0
# @chunk-end
# @chunk {"steps": ["sourceDescriptions"]}
sourceDescriptions:
  - name: api-reference
    type: openapi
    url: warp.openapi.yaml
# @chunk-end
# @chunk {"steps": ["workflows"]}
workflows:
# @chunk-end
# @chunk {"steps": ["workflows.missionLostInvention"]}
  - workflowId: missionLostInvention
    summary: Lost invention
    description: |-
      Travel back to the year 1889 and retrieve the blueprint for Nikola Tesla’s lost invention before it’s destroyed in a mysterious fire.
# @chunk-end
# @chunk {"steps": ["workflows.missionLostInvention.inputs"]}
    inputs:
      type: object
      properties:
        token:
          type: string
          format: password
          description: JWT Bearer token
# @chunk-end
# @chunk {"steps": ["workflows.missionLostInvention.parameters"]}
    parameters:
      - name: Authorization
        in: header
        value: "Bearer {$inputs.token}"
# @chunk-end
# @chunk {"steps": ["steps"]}
    steps:
# @chunk-end
# @chunk {"steps": ["steps.setAnchorToCurrentTime"]}
      - stepId: setAnchorToCurrentTime
# @chunk {"steps": ["steps.setAnchorToCurrentTime.operationId"]}
        operationId: api-reference.setAnchor
# @chunk-end
        description: Set an anchor to the current time.
# @chunk {"steps": ["steps.setAnchorToCurrentTime.outputs"]}
        outputs:
          anchor_id: $response.body#/id
# @chunk-end
# @chunk-end
# @chunk {"steps": ["steps.createTimelineTo1889"]}
      - stepId: createTimelineTo1889
# @chunk {"steps": ["steps.createTimelineTo1889.operationId"]}
        operationId: api-reference.createTimeline
# @chunk-end
        description: Create a timeline to 1889.
        outputs:
          timeline_id: $response.body#/id
# @chunk-end
# @chunk {"steps": ["steps.travelTo1889"]}
      - stepId: travelTo1889
        operationId: api-reference.timeTravel
        description: Travel to 1889.
        requestBody:
          payload:
            destination: $steps.createTimelineTo1889.outputs.timeline_id
# @chunk-end
# @chunk {"steps": ["steps.findAndRegisterBlueprint"]}
      - stepId: findAndRegisterBlueprint
        operationId: api-reference.registerItem
        description: Find the blueprints. Then, register them using the `registerItem` API call.
        requestBody:
          payload:
            description: Tesla's blueprint
        outputs:
          item_id: $response.body#/id
# @chunk-end
# @chunk {"steps": ["steps.avoidParadox"]}
      - stepId: avoidParadox
        operationId: api-reference.checkParadox
        description: Check for paradoxes.
# @chunk {"steps": ["steps.avoidParadox.requestBody"]}
        requestBody:
          payload:
            timeline_id: $steps.createTimelineTo1889.outputs.timeline_id
            proposed_changes:
              - event: Sneak in to retrieve Tesla's blueprint
                time: "1889-03-10T23:50:00Z"
              - item_id: $steps.findAndRegisterBlueprint.outputs.item_id
# @chunk-end
# @chunk {"steps": ["steps.avoidParadox.successCriteria"]}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $.is_stable == true
            context: $response.body
            type: jsonpath
# @chunk-end
# @chunk-end
# @chunk {"steps": ["steps.returnToPresent"]}
      - stepId: returnToPresent
        operationId: api-reference.timeTravel
        description: Return to the present.
# @chunk {"steps": ["steps.returnToPresent.requestBody"]}
        requestBody:
          payload:
            destination: $steps.setAnchorToCurrentTime.outputs.anchor_id
            items:
              - $steps.findAndRegisterBlueprint.outputs.item_id
# @chunk-end
# @chunk-end
