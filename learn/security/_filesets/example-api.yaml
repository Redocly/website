# @chunk {"steps": ["api-example"]}
# Example OpenAPI spec for security validation demonstration
openapi: 3.0.3
info:
  title: API Security Demo
  version: 1.0.0
  description: Example API demonstrating security validation rules

servers:
  - url: https://api.example.com/v1
    description: Production server (HTTPS required)

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT tokens must follow RFC8725 compliance for security best practices

  schemas:
    User:
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - email
      properties:
        id:
          type: string
          format: uuid
          description: UUID format prevents object-level authorization attacks
        name:
          type: string
          maxLength: 100
          pattern: "^[a-zA-Z\\s]+$"
        email:
          type: string
          format: email
          maxLength: 254
        permissions:
          type: array
          maxItems: 50
          items:
            type: string
            enum: [read, write, admin]

paths:
  /users/{userId}:
    get:
      summary: Get user by ID
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: UUID format prevents enumeration attacks
      responses:
        '200':
          description: User found
          headers:
            RateLimit-Limit:
              schema:
                type: integer
              description: Rate limit per hour
            RateLimit-Remaining:
              schema:
                type: integer  
              description: Remaining requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized - invalid or missing token
        '403':
          description: Forbidden - insufficient permissions
        '404':
          description: User not found
        '429':
          description: Rate limit exceeded
          headers:
            Retry-After:
              schema:
                type: integer
              description: Seconds to wait before retrying
        '500':
          description: Internal server error

    put:
      summary: Update user
      security:
        - BearerAuth: [admin]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          headers:
            RateLimit-Limit:
              schema:
                type: integer
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
        '422':
          description: Validation error
        '429':
          description: Rate limit exceeded
          headers:
            Retry-After:
              schema:
                type: integer
        '500':
          description: Internal server error
# @chunk-end
